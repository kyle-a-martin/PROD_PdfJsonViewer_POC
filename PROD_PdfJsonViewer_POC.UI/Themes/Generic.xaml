<!-- ResourceDictionary.xaml -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:PROD_PdfJsonViewer_POC.UI.Controls"
    xmlns:helper="clr-namespace:PROD_PdfJsonViewer_POC.UI.Helper"
    xmlns:fa="http://schemas.fontawesome.io/icons/">

    <!-- 1) Converter(s) -->
    <helper:JsonValueConverter x:Key="JsonValueConverter"/>

    <!-- 
        2) DataTemplates for Array/Object/Value 
           - Each uses ContentPresenter with 'ContentTemplateSelector' 
             instead of referencing a shared style.
    -->

    <!-- Template for displaying JSON Arrays -->
    <!--<DataTemplate x:Key="JsonArrayTemplate">
        --><!-- 
            Because JsonArray implements IEnumerable<JsonNode>, 
            we can directly bind to it. 
        --><!--
        <ItemsControl ItemsSource="{Binding}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border Margin="20,2,2,2"
                            BorderBrush="LightGray"
                            BorderThickness="0,0,0,1"
                            Padding="5">
                        --><!-- 
                            Each item is a JsonNode. We dispatch it to the 
                            JsonNodeTypeSelector directly here.
                        --><!--
                        <ContentPresenter
                            Content="{Binding}"
                            ContentTemplateSelector="{DynamicResource JsonNodeSelector}" />
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>-->

    <!-- Template for displaying JSON Objects -->
    <!--<DataTemplate x:Key="JsonObjectTemplate">
        --><!-- 
            JsonObject implements IEnumerable<KeyValuePair<string, JsonNode>>. 
        --><!--
        <ItemsControl ItemsSource="{Binding}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border Margin="20,2,2,2"
                            BorderBrush="LightGray"
                            BorderThickness="0,0,0,1"
                            Padding="5">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock
                                Text="{Binding Key}"
                                FontWeight="Bold"
                                Margin="0,0,10,0"/>
                            --><!-- 
                                The Value is the actual JsonNode; 
                                again use the selector. 
                            --><!--
                            <ContentPresenter
                                Content="{Binding Value}"
                                ContentTemplateSelector="{DynamicResource JsonNodeSelector}" />
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DataTemplate>-->

    <!-- Template for displaying JSON Values -->
    <!--<DataTemplate x:Key="JsonValueTemplate">
        <TextBox
            Text="{Binding Converter={StaticResource JsonValueConverter},
                           Mode=TwoWay,
                           UpdateSourceTrigger=PropertyChanged}"
            TextWrapping="Wrap"
            AcceptsReturn="True"
            MaxWidth="400"
            MinWidth="100"
            IsReadOnly="{Binding IsEditing,
                                RelativeSource={RelativeSource AncestorType=local:JsonEditorControl}}">

            --><!-- Optional styling/triggers can go here --><!--
            <TextBox.Style>
                <Style TargetType="TextBox">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEditing,
                                                      RelativeSource={RelativeSource AncestorType=local:JsonEditorControl}}"
                                     Value="False">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>

        </TextBox>
    </DataTemplate>-->

    <!-- 
        3) The JsonNodeTypeSelector that references those three templates 
        with static resources
    -->
    <!--<helper:JsonNodeTypeSelector x:Key="JsonNodeSelector"
                                 JsonObjectTemplate="{StaticResource JsonObjectTemplate}"
                                 JsonArrayTemplate="{StaticResource JsonArrayTemplate}"
                                 JsonValueTemplate="{StaticResource JsonValueTemplate}" />-->

    <!-- 
        4) Main Control Template for the custom JsonEditorControl. 
           Notice there's no "JsonNodeStyle." We directly use the
           ContentTemplateSelector in the top-level ContentPresenter below.
    -->
    <ControlTemplate x:Key="JsonEditorControlTemplate"
                     TargetType="local:JsonEditorControl">
        <Border BorderBrush="Gray"
                BorderThickness="1"
                Padding="10">
            <DockPanel>

                <!-- 
                    Controls to enter file path, load, toggle edit, and save. 
                    (unchanged from before)
                -->
                <StackPanel DockPanel.Dock="Top"
                            Orientation="Horizontal"
                            HorizontalAlignment="Stretch"
                            Margin="0,0,0,10">
                    <TextBox
                        Text="{Binding FilePath, RelativeSource={RelativeSource TemplatedParent}}"
                        Width="300"
                        Margin="0,0,10,0"
                        Style="{DynamicResource ModernTextBox}"/>
                    <Button
                        fa:Awesome.Content="Upload"
                        Command="{Binding LoadCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        Margin="0,0,10,0"
                        Style="{DynamicResource SquareIconButton}"/>
                    <Button
                        fa:Awesome.Content="Edit"
                        Command="{Binding ToggleEditCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        Margin="0,0,10,0"
                        Style="{DynamicResource SquareIconButton}"/>
                    <Button
                        fa:Awesome.Content="Save"
                        Command="{Binding SaveCommand, RelativeSource={RelativeSource TemplatedParent}}"
                        Style="{DynamicResource SquareIconButton}"/>
                </StackPanel>

                <!-- 
                    Scrollable region to display the JSON content 
                    with a direct reference to the template selector
                -->
                <ScrollViewer>
                    <ContentPresenter
                        Margin="10"
                        Content="{TemplateBinding JsonContent}"
                        ContentTemplateSelector="{StaticResource JsonNodeSelector}" />
                </ScrollViewer>

            </DockPanel>
        </Border>
    </ControlTemplate>

    <!-- 
        5) Finally, the style that applies our ControlTemplate to 
           all JsonEditorControl instances (no extra references needed).
    -->
    <Style TargetType="local:JsonEditorControl">
        <Setter Property="Template" Value="{StaticResource JsonEditorControlTemplate}" />
    </Style>

</ResourceDictionary>
